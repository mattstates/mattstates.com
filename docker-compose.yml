version: '3'

volumes:
    secrets:
        external: true

services:
    # https://medium.com/@pentacent/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71
    # Follow the instructions in the article, but I think the whole services stack should be running before executing the init-letsencrypt.sh program.

    nginx:
        image: nginx:1.15-alpine
        ports:
            - 80:80
            - 443:443
        volumes:
            - ./reverseproxy/nginx:/etc/nginx/conf.d
            - ./reverseproxy/certbot/conf:/etc/letsencrypt
            - ./reverseproxy/certbot/www:/var/www/certbot
        restart: unless-stopped
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    certbot:
        image: certbot/dns-digitalocean
        # image: certbot/certbot
        volumes:
            - ./reverseproxy/certbot/conf:/etc/letsencrypt
            - ./reverseproxy/certbot/www:/var/www/certbot
        restart: unless-stopped
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

    dotnetsdk:
        image: microsoft/dotnet:2.1-sdk

    dotnetruntime:
        depends_on:
            - dotnetsdk
        image: microsoft/dotnet:2.1-aspnetcore-runtime

    mattstates:
        depends_on:
            - dotnetruntime
        image: mstates/mattstates:latest
        environment:
            - USER_SECRETS_ID=65015713-1466-415e-8bdd-aa3c1034d755
        ports:
            - 80
        volumes:
            # "run docker volume inspect" to find the mount point to create the .json file.
            - secrets:/root/.microsoft/usersecrets/65015713-1466-415e-8bdd-aa3c1034d755
